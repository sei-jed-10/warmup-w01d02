############ Challenge ###############

How can you view a file in different directory without switching to that directory first? What is the difference between absolute paths and relative paths?

######################################



You need to search for lines in the file marked with the word 'CLUE'. Use the `grep` command to do this.

Once you've found all the clues it's time to save them to a separate file for future reference.

Use `touch` to create a file named 'clues.txt'. Use `>` to save the output of the `grep` command to the 'clues.txt' file.

That's the first step done! Open 'step1-git' to see how you can track your work using a version control system (git).


Take a look inside your 'clues.txt'. What does the third clue tell you? Within the 'mystery' directory, which files should you look at, based on this clue?


############ Challenge ###############

Sometimes you don't want to see the whole file, but just peek inside it to get an idea of the content.
Research the `tail` and `head` commands. Try these commands on the files in the 'mystery' directory.

######################################


Now you know all of the commands you'll need to find the mysterious woman.

Create a file called 'possible_witnesses.txt' containing a list of all women matching the barista's description and their addresses.
Commit and push the file to Github.

If you get stuck look inside 'hint1'
=========
step3.
==========
You found 4 matches for the name 'Annabel'. Only 2 of them are women so you can rule out the remainder. Another piece of information you have is their address. There is a 'streets' subdirectory in the 'mystery' directory with a list of files named after streets.

############ Challenge ###############

See if you can find files matching street names for two remaining women named 'Annabel'. Use the combinations of commands from the Detective Handbook (section step3) to do this.

######################################


Take a look inside the files you've found. REMEMBER: among the information available in 'possible_witnesses.txt', you have references to line numbers. See if you can use that line number to discover something useful about the lady called 'Annabel'.

If you get stuck check out hint2.

=====
step 4
=====
############ Challenge ###############

Use the combination of `head`, `tail` and `|` operators to view exactly the line you're interested in.

######################################


You have two addresses to investigate. Create a file for your reference called `interviews.txt`. Find the relevant line in each of the two address files, and save the contents to 'interviews.txt'. Commit it and push to Github.


====
step 5
===

You're concerned that the investigation has been compromised. You use an old detective trick to cover your tracks.

To recover your 'step5' file, use the `git checkout` command to check out the 'step-5' branch, and try to view this file again.


====
step 6
====
Now you have more information to identify the perpetrator. Peek into the './mystery/vehicles' file. What information does it contain? Cross-reference it with your 'clues.txt' again - is there anything else you could search for in the vehicles record?

############ Challenge ###############

Now you need to search for multiple keywords in one file. How can you combine `grep` with flags and the pipe operator ('|') to filter the vehicle records for:

* car model
* car color
* license plate number
* suspect's height

######################################


Save the list of suspects into a new file called 'suspects.txt', commit and push to Github.

Make a pull request to the original 'makersacademy/clmystery' repository to report your progress to The Chief. Find out more about opening a pull request here: https://help.github.com/en/articles/creating-a-pull-request-from-a-fork

You're very happy with the progress of your investigation - you feel like you are close to identifying the culprit.

Move on to step 7.


====
step 7
====

Now you're down to 4 suspects. First, destroy all the files you've created except for 'clues.txt' and 'suspects.txt', you don't need them anymore.


############ Challenge ###############

The phone rings unexpectedly and you lose your train of thought. How can you remind yourself which files you have changed or added? Maybe git can help.

Can you use git to see the changes between one commit and another?

######################################

===
step 8
===
The final outstanding clue is the list of memberships in the wallet found at the crime scene. All that's required now is to verify your suspect holds all of the relevant memberships.

What files does the './mystery/memberships' subdirectory contain? What's inside these files?


############ Challenge ###############

Remember that the `cat` command was originally intended for concatenating files. Using this how can you tell if one suspect has all of the memberships?

How many membership cards were in the wallet? Can you automatically count if the suspect has all of them using `grep`, `wc` commands and the pipe operator?

######################################


If you managed to narrow your investigation down to one suspect, read the `solution` file to verify that you have found the killer. Move on to 'step9'

If not, retrace your steps until there is only one suspect.

===
step 9
===
Congratulations! You caught the murderer!

To close the investigation and let the courts do their work, save his name in a file called 'solution.txt'.

Change permissions on the file so that you are the only one able to edit it (everyone else can read the contents). There was a case last summer where a convict was switched out for an innocent man on the way to jail - and we don't want that happening again!

Make sure that 'solution.txt' contains only the name of the convict with no extra spaces! Don't copy-and-paste the name, type it in manually. This way our jailkeeper robot can check if you've caught the right guy.

Add & commit 'solution.txt' and push to Github. You can now relax and wait for that promotion, Detective!


_______   _    _   ______          ______   _   _   _____
|__   __| | |  | | |  ____|        |  ____| | \ | | |  __ \
   | |    | |__| | | |__           | |__    |  \| | | |  | |
   | |    |  __  | |  __|          |  __|   | . ` | | |  | |
   | |    | |  | | | |____         | |____  | |\  | | |__| |
   |_|    |_|  |_| |______|        |______| |_| \_| |_____/
